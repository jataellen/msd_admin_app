-- Migration: Add status tracking to orders table with historical data population
-- Description: Adds completed_statuses array and status_history table, then populates historical data
-- Note: Uses only existing workflow_status values from the database

-- Add completed_statuses array to track all completed workflow statuses
ALTER TABLE orders 
ADD COLUMN IF NOT EXISTS completed_statuses VARCHAR(100)[] DEFAULT ARRAY[]::VARCHAR[];

-- Create a status history table to track when each status was completed
CREATE TABLE IF NOT EXISTS order_status_history (
    history_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    order_id UUID NOT NULL REFERENCES orders(order_id) ON DELETE CASCADE,
    status VARCHAR(100) NOT NULL,
    completed_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    completed_by UUID REFERENCES auth.users(id),
    notes TEXT,
    UNIQUE(order_id, status) -- Prevent duplicate status entries for same order
);

-- Create indexes for faster queries
CREATE INDEX IF NOT EXISTS idx_order_status_history_order_id ON order_status_history(order_id);
CREATE INDEX IF NOT EXISTS idx_order_status_history_completed_at ON order_status_history(completed_at);

-- First, let's see what workflow_status values actually exist in the database
-- This will help us understand what values we need to handle
DO $$
DECLARE
    status_record RECORD;
BEGIN
    RAISE NOTICE 'Current workflow_status values in orders table:';
    FOR status_record IN 
        SELECT DISTINCT workflow_status::TEXT as status, workflow_type, COUNT(*) as count
        FROM orders 
        GROUP BY workflow_status::TEXT, workflow_type 
        ORDER BY workflow_type, status
    LOOP
        RAISE NOTICE 'Type: %, Status: %, Count: %', status_record.workflow_type, status_record.status, status_record.count;
    END LOOP;
END $$;

-- Create a temporary function to determine completed statuses based on workflow progression
CREATE OR REPLACE FUNCTION get_completed_statuses_for_status(p_workflow_type TEXT, p_current_status TEXT)
RETURNS VARCHAR(100)[] AS $$
BEGIN
    -- For MATERIALS_ONLY workflow
    IF p_workflow_type = 'MATERIALS_ONLY' THEN
        CASE p_current_status
            WHEN 'NEW_LEAD' THEN RETURN ARRAY[]::VARCHAR[];
            WHEN 'QUOTE_REQUESTED' THEN RETURN ARRAY['NEW_LEAD'];
            WHEN 'QUOTE_PREPARED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED'];
            WHEN 'QUOTE_SENT' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'QUOTE_PREPARED'];
            WHEN 'QUOTE_ACCEPTED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'QUOTE_PREPARED', 'QUOTE_SENT'];
            WHEN 'PO_CREATED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_ACCEPTED'];
            WHEN 'PO_SENT' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_ACCEPTED', 'PO_CREATED'];
            WHEN 'SUPPLIER_CONFIRMED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_ACCEPTED', 'PO_CREATED', 'PO_SENT'];
            WHEN 'MATERIALS_ORDERED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_ACCEPTED', 'PO_CREATED', 'PO_SENT', 'SUPPLIER_CONFIRMED'];
            WHEN 'PARTIAL_RECEIVED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_ACCEPTED', 'PO_CREATED', 'PO_SENT', 'SUPPLIER_CONFIRMED', 'MATERIALS_ORDERED'];
            WHEN 'MATERIALS_RECEIVED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_ACCEPTED', 'PO_CREATED', 'PO_SENT', 'SUPPLIER_CONFIRMED', 'MATERIALS_ORDERED'];
            WHEN 'CUSTOMER_NOTIFIED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_ACCEPTED', 'PO_CREATED', 'PO_SENT', 'SUPPLIER_CONFIRMED', 'MATERIALS_ORDERED', 'MATERIALS_RECEIVED'];
            WHEN 'READY_FOR_PICKUP' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_ACCEPTED', 'PO_CREATED', 'PO_SENT', 'SUPPLIER_CONFIRMED', 'MATERIALS_ORDERED', 'MATERIALS_RECEIVED', 'CUSTOMER_NOTIFIED'];
            WHEN 'DELIVERY_SCHEDULED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_ACCEPTED', 'PO_CREATED', 'PO_SENT', 'SUPPLIER_CONFIRMED', 'MATERIALS_ORDERED', 'MATERIALS_RECEIVED'];
            WHEN 'DELIVERED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_ACCEPTED', 'PO_CREATED', 'PO_SENT', 'SUPPLIER_CONFIRMED', 'MATERIALS_ORDERED', 'MATERIALS_RECEIVED', 'DELIVERY_SCHEDULED'];
            WHEN 'INVOICE_SENT' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_ACCEPTED', 'PO_CREATED', 'PO_SENT', 'SUPPLIER_CONFIRMED', 'MATERIALS_ORDERED', 'MATERIALS_RECEIVED', 'DELIVERED'];
            WHEN 'PAYMENT_RECEIVED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_ACCEPTED', 'PO_CREATED', 'PO_SENT', 'SUPPLIER_CONFIRMED', 'MATERIALS_ORDERED', 'MATERIALS_RECEIVED', 'DELIVERED', 'INVOICE_SENT'];
            WHEN 'COMPLETED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_ACCEPTED', 'PO_CREATED', 'PO_SENT', 'SUPPLIER_CONFIRMED', 'MATERIALS_ORDERED', 'MATERIALS_RECEIVED', 'DELIVERED', 'INVOICE_SENT', 'PAYMENT_RECEIVED'];
            WHEN 'FOLLOW_UP_SENT' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_ACCEPTED', 'PO_CREATED', 'PO_SENT', 'SUPPLIER_CONFIRMED', 'MATERIALS_ORDERED', 'MATERIALS_RECEIVED', 'DELIVERED', 'INVOICE_SENT', 'PAYMENT_RECEIVED', 'COMPLETED'];
            ELSE RETURN ARRAY[]::VARCHAR[];
        END CASE;
    
    -- For MATERIALS_AND_INSTALLATION workflow
    ELSIF p_workflow_type = 'MATERIALS_AND_INSTALLATION' THEN
        CASE p_current_status
            WHEN 'NEW_LEAD' THEN RETURN ARRAY[]::VARCHAR[];
            WHEN 'QUOTE_REQUESTED' THEN RETURN ARRAY['NEW_LEAD'];
            WHEN 'SITE_VISIT_SCHEDULED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED'];
            WHEN 'SITE_VISIT_COMPLETED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'SITE_VISIT_SCHEDULED'];
            WHEN 'DETAILED_MEASUREMENT_SCHEDULED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'SITE_VISIT_SCHEDULED', 'SITE_VISIT_COMPLETED'];
            WHEN 'DETAILED_MEASUREMENT_COMPLETED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'SITE_VISIT_SCHEDULED', 'SITE_VISIT_COMPLETED', 'DETAILED_MEASUREMENT_SCHEDULED'];
            WHEN 'QUOTE_PREPARED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'SITE_VISIT_SCHEDULED', 'SITE_VISIT_COMPLETED', 'DETAILED_MEASUREMENT_SCHEDULED', 'DETAILED_MEASUREMENT_COMPLETED'];
            WHEN 'QUOTE_SENT' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'SITE_VISIT_SCHEDULED', 'SITE_VISIT_COMPLETED', 'DETAILED_MEASUREMENT_SCHEDULED', 'DETAILED_MEASUREMENT_COMPLETED', 'QUOTE_PREPARED'];
            WHEN 'QUOTE_APPROVED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'SITE_VISIT_SCHEDULED', 'SITE_VISIT_COMPLETED', 'DETAILED_MEASUREMENT_SCHEDULED', 'DETAILED_MEASUREMENT_COMPLETED', 'QUOTE_PREPARED', 'QUOTE_SENT'];
            WHEN 'QUOTE_ACCEPTED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'SITE_VISIT_SCHEDULED', 'SITE_VISIT_COMPLETED', 'DETAILED_MEASUREMENT_SCHEDULED', 'DETAILED_MEASUREMENT_COMPLETED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_APPROVED'];
            WHEN 'WORK_ORDER_CREATED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'SITE_VISIT_SCHEDULED', 'SITE_VISIT_COMPLETED', 'DETAILED_MEASUREMENT_SCHEDULED', 'DETAILED_MEASUREMENT_COMPLETED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_APPROVED', 'QUOTE_ACCEPTED'];
            WHEN 'WORK_ORDER_SENT' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'SITE_VISIT_SCHEDULED', 'SITE_VISIT_COMPLETED', 'DETAILED_MEASUREMENT_SCHEDULED', 'DETAILED_MEASUREMENT_COMPLETED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_APPROVED', 'QUOTE_ACCEPTED', 'WORK_ORDER_CREATED'];
            WHEN 'WORK_ORDER_SIGNED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'SITE_VISIT_SCHEDULED', 'SITE_VISIT_COMPLETED', 'DETAILED_MEASUREMENT_SCHEDULED', 'DETAILED_MEASUREMENT_COMPLETED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_APPROVED', 'QUOTE_ACCEPTED', 'WORK_ORDER_CREATED', 'WORK_ORDER_SENT'];
            WHEN 'DEPOSIT_REQUESTED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'SITE_VISIT_SCHEDULED', 'SITE_VISIT_COMPLETED', 'DETAILED_MEASUREMENT_SCHEDULED', 'DETAILED_MEASUREMENT_COMPLETED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_APPROVED', 'QUOTE_ACCEPTED', 'WORK_ORDER_CREATED', 'WORK_ORDER_SENT', 'WORK_ORDER_SIGNED'];
            WHEN 'DEPOSIT_RECEIVED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'SITE_VISIT_SCHEDULED', 'SITE_VISIT_COMPLETED', 'DETAILED_MEASUREMENT_SCHEDULED', 'DETAILED_MEASUREMENT_COMPLETED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_APPROVED', 'QUOTE_ACCEPTED', 'WORK_ORDER_CREATED', 'WORK_ORDER_SENT', 'WORK_ORDER_SIGNED', 'DEPOSIT_REQUESTED'];
            WHEN 'MATERIALS_ORDERED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'SITE_VISIT_SCHEDULED', 'SITE_VISIT_COMPLETED', 'DETAILED_MEASUREMENT_SCHEDULED', 'DETAILED_MEASUREMENT_COMPLETED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_APPROVED', 'QUOTE_ACCEPTED', 'WORK_ORDER_CREATED', 'WORK_ORDER_SENT', 'WORK_ORDER_SIGNED', 'DEPOSIT_REQUESTED', 'DEPOSIT_RECEIVED'];
            WHEN 'MATERIALS_BACKORDERED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'SITE_VISIT_SCHEDULED', 'SITE_VISIT_COMPLETED', 'DETAILED_MEASUREMENT_SCHEDULED', 'DETAILED_MEASUREMENT_COMPLETED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_APPROVED', 'QUOTE_ACCEPTED', 'WORK_ORDER_CREATED', 'WORK_ORDER_SENT', 'WORK_ORDER_SIGNED', 'DEPOSIT_REQUESTED', 'DEPOSIT_RECEIVED', 'MATERIALS_ORDERED'];
            WHEN 'MATERIALS_RECEIVED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'SITE_VISIT_SCHEDULED', 'SITE_VISIT_COMPLETED', 'DETAILED_MEASUREMENT_SCHEDULED', 'DETAILED_MEASUREMENT_COMPLETED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_APPROVED', 'QUOTE_ACCEPTED', 'WORK_ORDER_CREATED', 'WORK_ORDER_SENT', 'WORK_ORDER_SIGNED', 'DEPOSIT_REQUESTED', 'DEPOSIT_RECEIVED', 'MATERIALS_ORDERED'];
            WHEN 'DELIVERY_SCHEDULED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'SITE_VISIT_SCHEDULED', 'SITE_VISIT_COMPLETED', 'DETAILED_MEASUREMENT_SCHEDULED', 'DETAILED_MEASUREMENT_COMPLETED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_APPROVED', 'QUOTE_ACCEPTED', 'WORK_ORDER_CREATED', 'WORK_ORDER_SENT', 'WORK_ORDER_SIGNED', 'DEPOSIT_REQUESTED', 'DEPOSIT_RECEIVED', 'MATERIALS_ORDERED', 'MATERIALS_RECEIVED'];
            WHEN 'DELIVERY_COMPLETED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'SITE_VISIT_SCHEDULED', 'SITE_VISIT_COMPLETED', 'DETAILED_MEASUREMENT_SCHEDULED', 'DETAILED_MEASUREMENT_COMPLETED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_APPROVED', 'QUOTE_ACCEPTED', 'WORK_ORDER_CREATED', 'WORK_ORDER_SENT', 'WORK_ORDER_SIGNED', 'DEPOSIT_REQUESTED', 'DEPOSIT_RECEIVED', 'MATERIALS_ORDERED', 'MATERIALS_RECEIVED', 'DELIVERY_SCHEDULED'];
            WHEN 'DELIVERED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'SITE_VISIT_SCHEDULED', 'SITE_VISIT_COMPLETED', 'DETAILED_MEASUREMENT_SCHEDULED', 'DETAILED_MEASUREMENT_COMPLETED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_APPROVED', 'QUOTE_ACCEPTED', 'WORK_ORDER_CREATED', 'WORK_ORDER_SENT', 'WORK_ORDER_SIGNED', 'DEPOSIT_REQUESTED', 'DEPOSIT_RECEIVED', 'MATERIALS_ORDERED', 'MATERIALS_RECEIVED', 'DELIVERY_SCHEDULED', 'DELIVERY_COMPLETED'];
            WHEN 'INSTALLATION_SCHEDULED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'SITE_VISIT_SCHEDULED', 'SITE_VISIT_COMPLETED', 'DETAILED_MEASUREMENT_SCHEDULED', 'DETAILED_MEASUREMENT_COMPLETED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_APPROVED', 'QUOTE_ACCEPTED', 'WORK_ORDER_CREATED', 'WORK_ORDER_SENT', 'WORK_ORDER_SIGNED', 'DEPOSIT_REQUESTED', 'DEPOSIT_RECEIVED', 'MATERIALS_ORDERED', 'MATERIALS_RECEIVED', 'DELIVERED'];
            WHEN 'INSTALLATION_IN_PROGRESS' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'SITE_VISIT_SCHEDULED', 'SITE_VISIT_COMPLETED', 'DETAILED_MEASUREMENT_SCHEDULED', 'DETAILED_MEASUREMENT_COMPLETED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_APPROVED', 'QUOTE_ACCEPTED', 'WORK_ORDER_CREATED', 'WORK_ORDER_SENT', 'WORK_ORDER_SIGNED', 'DEPOSIT_REQUESTED', 'DEPOSIT_RECEIVED', 'MATERIALS_ORDERED', 'MATERIALS_RECEIVED', 'DELIVERED', 'INSTALLATION_SCHEDULED'];
            WHEN 'INSTALLATION_COMPLETED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'SITE_VISIT_SCHEDULED', 'SITE_VISIT_COMPLETED', 'DETAILED_MEASUREMENT_SCHEDULED', 'DETAILED_MEASUREMENT_COMPLETED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_APPROVED', 'QUOTE_ACCEPTED', 'WORK_ORDER_CREATED', 'WORK_ORDER_SENT', 'WORK_ORDER_SIGNED', 'DEPOSIT_REQUESTED', 'DEPOSIT_RECEIVED', 'MATERIALS_ORDERED', 'MATERIALS_RECEIVED', 'DELIVERED', 'INSTALLATION_SCHEDULED', 'INSTALLATION_IN_PROGRESS'];
            WHEN 'PAYMENT_RECEIVED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'SITE_VISIT_SCHEDULED', 'SITE_VISIT_COMPLETED', 'DETAILED_MEASUREMENT_SCHEDULED', 'DETAILED_MEASUREMENT_COMPLETED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_APPROVED', 'QUOTE_ACCEPTED', 'WORK_ORDER_CREATED', 'WORK_ORDER_SENT', 'WORK_ORDER_SIGNED', 'DEPOSIT_REQUESTED', 'DEPOSIT_RECEIVED', 'MATERIALS_ORDERED', 'MATERIALS_RECEIVED', 'DELIVERED', 'INSTALLATION_SCHEDULED', 'INSTALLATION_IN_PROGRESS', 'INSTALLATION_COMPLETED'];
            WHEN 'ORDER_COMPLETED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'SITE_VISIT_SCHEDULED', 'SITE_VISIT_COMPLETED', 'DETAILED_MEASUREMENT_SCHEDULED', 'DETAILED_MEASUREMENT_COMPLETED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_APPROVED', 'QUOTE_ACCEPTED', 'WORK_ORDER_CREATED', 'WORK_ORDER_SENT', 'WORK_ORDER_SIGNED', 'DEPOSIT_REQUESTED', 'DEPOSIT_RECEIVED', 'MATERIALS_ORDERED', 'MATERIALS_RECEIVED', 'DELIVERED', 'INSTALLATION_SCHEDULED', 'INSTALLATION_IN_PROGRESS', 'INSTALLATION_COMPLETED', 'PAYMENT_RECEIVED'];
            WHEN 'COMPLETED' THEN RETURN ARRAY['NEW_LEAD', 'QUOTE_REQUESTED', 'SITE_VISIT_SCHEDULED', 'SITE_VISIT_COMPLETED', 'DETAILED_MEASUREMENT_SCHEDULED', 'DETAILED_MEASUREMENT_COMPLETED', 'QUOTE_PREPARED', 'QUOTE_SENT', 'QUOTE_APPROVED', 'QUOTE_ACCEPTED', 'WORK_ORDER_CREATED', 'WORK_ORDER_SENT', 'WORK_ORDER_SIGNED', 'DEPOSIT_REQUESTED', 'DEPOSIT_RECEIVED', 'MATERIALS_ORDERED', 'MATERIALS_RECEIVED', 'DELIVERED', 'INSTALLATION_SCHEDULED', 'INSTALLATION_IN_PROGRESS', 'INSTALLATION_COMPLETED', 'PAYMENT_RECEIVED', 'ORDER_COMPLETED'];
            -- Add other statuses from the enum as needed
            ELSE RETURN ARRAY[]::VARCHAR[];
        END CASE;
    ELSE
        RETURN ARRAY[]::VARCHAR[];
    END IF;
END;
$$ LANGUAGE plpgsql;

-- Update existing orders to populate completed_statuses based on their current status
UPDATE orders 
SET completed_statuses = get_completed_statuses_for_status(workflow_type::TEXT, workflow_status::TEXT)
WHERE workflow_status::TEXT != 'NEW_LEAD' 
  AND (completed_statuses IS NULL OR array_length(completed_statuses, 1) = 0);

-- Populate status history from completed_statuses for existing orders
INSERT INTO order_status_history (order_id, status, completed_at, notes)
SELECT 
    o.order_id,
    unnest(o.completed_statuses) as status,
    o.created_at + (ordinality * interval '1 day') as completed_at,
    'Status completed during migration' as notes
FROM orders o,
    LATERAL unnest(o.completed_statuses) WITH ORDINALITY
WHERE array_length(o.completed_statuses, 1) > 0
ON CONFLICT (order_id, status) DO NOTHING;

-- Create a function to update completed_statuses when workflow_status changes (for future updates)
CREATE OR REPLACE FUNCTION update_completed_statuses()
RETURNS TRIGGER AS $$
BEGIN
    -- Only proceed if workflow_status changed
    IF OLD.workflow_status IS DISTINCT FROM NEW.workflow_status THEN
        -- Add the old status to completed_statuses if not already there
        IF OLD.workflow_status IS NOT NULL AND NOT (OLD.workflow_status::TEXT = ANY(COALESCE(NEW.completed_statuses, ARRAY[]::VARCHAR[]))) THEN
            NEW.completed_statuses := array_append(COALESCE(NEW.completed_statuses, ARRAY[]::VARCHAR[]), OLD.workflow_status::TEXT);
        END IF;
        
        -- Add to status history
        INSERT INTO order_status_history (order_id, status, completed_at, completed_by)
        VALUES (NEW.order_id, OLD.workflow_status::TEXT, NOW(), 
                CASE 
                    WHEN current_setting('app.current_user_id', true) = '' THEN NULL
                    ELSE current_setting('app.current_user_id', true)::UUID
                END)
        ON CONFLICT (order_id, status) DO NOTHING;
    END IF;
    
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Create trigger to automatically update completed_statuses
DROP TRIGGER IF EXISTS update_order_completed_statuses ON orders;
CREATE TRIGGER update_order_completed_statuses
BEFORE UPDATE ON orders
FOR EACH ROW
EXECUTE FUNCTION update_completed_statuses();

-- Clean up the temporary function
DROP FUNCTION get_completed_statuses_for_status(TEXT, TEXT);

-- Add comments
COMMENT ON COLUMN orders.completed_statuses IS 'Array of all workflow statuses that have been completed for this order';
COMMENT ON TABLE order_status_history IS 'Tracks when each workflow status was completed for an order';

-- Show sample results
SELECT 
    order_id,
    workflow_type,
    workflow_status::TEXT as current_status,
    completed_statuses,
    array_length(completed_statuses, 1) as completed_count
FROM orders
WHERE completed_statuses IS NOT NULL 
  AND array_length(completed_statuses, 1) > 0
LIMIT 10;